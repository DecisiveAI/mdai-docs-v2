# data/use_case/compliance.yaml
"0.8.6":
  flow:
    title: "Compliance flow"
    steps:
      - title: "Step 1. introduce otel and mdai into your cluster"
        modes:
          automated:
            sections:
              - heading: "Provision use case resources (hub, otel, data)"
                lang: "bash"
                body: |
                  ```
                  mdai use-case compliance --version 0.8.6
                  ```
              - heading: "Validate dataflow with Grafana"
                info: |
                  If you haven't yet logged into Grafana, the login is `admin` / `mdai`"
                body: |
                  ```
                  kubectl port-forward -n mdai svc/mdai-grafana 3000:80
                  ```

                  Navigate to the [OTel Dataflow Dashboard](http://localhost:3000/d/otel_view/otel-data-flow?orgId=1&from=now-15m&to=now&refresh=5s)

                  ![Grafana](../../../../images/compliance/step_1.png)

                  You should see a consistent stream of data and a 1:1 ratio of logs received : logs exported
          manual:
            sections:
              - heading: "Provision use case resources (hub & otel)"
                lang: "bash"
                body: |
                  ```
                  agjoasijgiaosg
                  ```


              - heading: "Start generating data"
                body: "Run the generator job..."

              - heading: "Connect your data stream"
                body: "Configure exporters manually..."

              - heading: "Validate dataflow with Prometheus"
                body: "Check mdai_collector_* in Prometheus..."


      - title: "Step 2. use mdai recipe to statically achieve use case"
        sections:        # ‚Üê shared across modes (falls back to this)
          - heading: "Update provisioned resources (hub & otel)"
            body: "Apply static routing/sampling..."

          - heading: "Validate dataflow with Prometheus"
            body: "Confirm baseline metrics..."


      - title: "Step 3. use mdai & otel to dynamically achieve use case"
        modes:
          automated:
            sections:
              - heading: "Update provisioned resources (hub & otel)"
                body: "Automated dynamic rules via script..."

              - heading: "Validate dataflow with Prometheus"
                body: "Observe rate shifts..."

          manual:
            sections:
              - heading: "Update provisioned resources (hub & otel)"
                body: "Manually apply dynamic rules..."

              - heading: "Validate dataflow with Prometheus"
                body: "Track changes in dashboards..."


"0.9.0":
  flow:
    title: "Compliance flow"
    steps:
      # same step titles; content can differ per mode for this version as well
